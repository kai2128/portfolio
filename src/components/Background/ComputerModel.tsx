/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'
import type { Mesh } from 'three'
import gsap from 'gsap'

export function ComputerModel(props) {
  const { nodes, materials } = useGLTF('./models/computer.glb')
  const mesh = useRef<Mesh>(null)
  const rotationX = useRef<number>(0)
  const rotationY = useRef<number>(0)
  const lerp = useRef({
    x: {
      current: 0,
      target: 0,
      ease: 0.1,
    },
    y: {
      current: 0,
      target: 0,
      ease: 0.1,
    },
  })
  useEffect(() => {
    document.addEventListener('mousemove', (event) => {
      rotationX.current = (event.clientY - window.innerHeight / 2) / window.innerHeight
      rotationY.current = (event.clientX - window.innerWidth / 2) / window.innerWidth
      lerp.current.x.target = rotationX.current * 0.05
      lerp.current.y.target = rotationY.current * 0.85
    })
  }, [])
  useFrame(({ clock }) => {
    mesh.current.rotation.y = lerp.current.y.current
    mesh.current.rotation.x = lerp.current.x.current
    lerp.current.x.current = gsap.utils.interpolate(lerp.current.x.current, lerp.current.x.target, 0.2)
    lerp.current.y.current = gsap.utils.interpolate(lerp.current.y.current, lerp.current.y.target, 0.2)
  })
  return (
    <group {...props} dispose={null} ref={mesh}>
      <mesh
        name="stand001"
        castShadow
        receiveShadow
        geometry={nodes.stand001.geometry}
        material={materials.stand}
        position={[-0.08, 0.65, -0.69]}
      />
      <mesh
        name="bezel001"
        castShadow
        receiveShadow
        geometry={nodes.bezel001.geometry}
        material={materials.bezel}
        position={[-0.08, 1.77, -1.06]}
      />
      <mesh
        name="screen001"
        castShadow
        receiveShadow
        geometry={nodes.screen001.geometry}
        material={materials.screen}
        position={[-0.08, 1.77, 0.03]}
      />
      <mesh
        name="controlPanel001"
        castShadow
        receiveShadow
        geometry={nodes.controlPanel001.geometry}
        material={materials['Material.001']}
        position={[-0.08, 0.47, 0.25]}
      />
      <mesh
        name="leverHead001"
        castShadow
        receiveShadow
        geometry={nodes.leverHead001.geometry}
        material={materials.leverHead}
        position={[0.45, 0.85, 0.57]}
      />
      <mesh
        name="lever001"
        castShadow
        receiveShadow
        geometry={nodes.lever001.geometry}
        material={materials['metal.001']}
        position={[0.45, 0.58, 0.54]}
      />
      <group name="leverBase001" position={[0.45, 0.58, 0.54]}>
        <mesh
          name="Cube018"
          castShadow
          receiveShadow
          geometry={nodes.Cube018.geometry}
          material={materials.metal}
        />
        <mesh
          name="Cube018_1"
          castShadow
          receiveShadow
          geometry={nodes.Cube018_1.geometry}
          material={materials.black}
        />
      </group>
      <mesh
        name="button001"
        castShadow
        receiveShadow
        geometry={nodes.button001.geometry}
        material={materials.button}
        position={[0.45, 0.65, 0.19]}
      />
      <mesh
        name="base001"
        castShadow
        receiveShadow
        geometry={nodes.base001.geometry}
        material={materials.base}
        position={[-0.08, 0.34, -0.27]}
      />
      <mesh
        name="monitor001"
        castShadow
        receiveShadow
        geometry={nodes.monitor001.geometry}
        material={materials.monitor}
        position={[-0.08, 1.77, -1.06]}
      />
      <mesh
        name="keycaps001"
        castShadow
        receiveShadow
        geometry={nodes.keycaps001.geometry}
        material={materials.keycaps}
        position={[-0.57, 0.71, 0.11]}
      />
      <mesh
        name="Text001"
        castShadow
        receiveShadow
        geometry={nodes.Text001.geometry}
        material={materials.keycaps}
        position={[-0.78, 0.28, 0.86]}
      />
    </group>
  )
}

useGLTF.preload('/models/computer.glb')
